{"version":3,"sources":["webpack://fufeiTimeMeter/webpack/universalModuleDefinition","webpack://fufeiTimeMeter/./index.js","webpack://fufeiTimeMeter/./lib/operation.js","webpack://fufeiTimeMeter/./lib/resultInterceptor.js","webpack://fufeiTimeMeter/./lib/timeMeter.js","webpack://fufeiTimeMeter/./utils.js","webpack://fufeiTimeMeter/webpack/bootstrap","webpack://fufeiTimeMeter/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","intervalHandler","this","status","milliseconds","intervalSpace","execCallback","call","result","timeMeterStatus","resultInterceptor","handlers","forEach","fn","timeUpdate","start","interval","setInterval","bind","console","warn","pause","resume","reset","clearInterval","ResultInterceptor","prototype","add","resultFilter","push","length","remove","id","operations","utils","createInstance","params","isNumber","isFunction","e","log","val","toString","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAwB,eAAID,IAE5BD,EAAqB,eAAIC,IAR3B,CASGK,MAAM,WACT,O,gBCVAH,EAAOD,QAAU,EAAjB,M,QCCA,SAASK,IACW,GAAfC,KAAKC,SAEND,KAAKE,cAAgBF,KAAKG,cAE1BC,EAAaC,KAAKL,OAItB,SAASI,IACP,IAAIE,EAAS,CACXJ,aAAaF,KAAKE,aAClBK,gBAAgBP,KAAKC,QAEvBD,KAAKQ,kBAAkBC,SAASC,SAASC,IAC9B,MAANA,IACDL,EAASK,EAAGL,OAGhBN,KAAKY,WAAWN,GAkDlBX,EAAOD,QAAU,CACfmB,MA/CF,WACoB,GAAfb,KAAKC,QAKRD,KAAKC,OAAS,EACdG,EAAaC,KAAKL,MAClBA,KAAKc,SAAWC,YAAYhB,EAAgBiB,KAAKhB,MAAMA,KAAKG,gBAN1Dc,QAAQC,KAAK,qBA8CfC,MApCF,WACoB,GAAfnB,KAAKC,QAIRD,KAAKC,OAAS,EAEdG,EAAaC,KAAKL,OALhBiB,QAAQC,KAAK,qBAmCfE,OA1BF,WACoB,GAAfpB,KAAKC,QAIRD,KAAKC,OAAS,EACdG,EAAaC,KAAKL,OAJhBiB,QAAQC,KAAK,qBAyBfG,MAjBF,WACoB,GAAfrB,KAAKC,QAKRD,KAAKC,OAAS,EACdD,KAAKE,aAAe,EACpBoB,cAActB,KAAKc,UAEnBV,EAAaC,KAAKL,OARhBiB,QAAQC,KAAK,uB,QC3DjB,SAASK,IACPvB,KAAKS,SAAW,GAGlBc,EAAkBC,UAAUC,IAAM,SAAUC,GAE1C,OADA1B,KAAKS,SAASkB,KAAKD,GACZ1B,KAAKS,SAASmB,OAAS,GAGhCL,EAAkBC,UAAUK,OAAS,SAAUC,GAC1C9B,KAAKS,SAASqB,KACf9B,KAAKS,SAASqB,GAAM,OAIxBnC,EAAOD,QAAU6B,G,cCfjB,IAAIQ,EAAa,EAAQ,KACrBR,EAAoB,EAAQ,KAC5BS,EAAQ,EAAQ,KAEpB,SAASC,EAAeC,GAKtBlC,KAAKC,OAAS,EAGdD,KAAKc,SAAW,KAEhBd,KAAKG,cACH+B,GACAA,EAAO/B,eACP6B,EAAMG,SAASD,EAAO/B,gBACtB+B,EAAO/B,cAAgB,EACrB+B,EAAO/B,cAAgB,GAC3BH,KAAKE,aACHgC,GACAA,EAAOhC,cACP8B,EAAMG,SAASD,EAAOhC,cACpBgC,EAAOhC,aAAe,EAG1BF,KAAKY,WACHsB,GACAA,EAAOtB,YACPoB,EAAMI,WAAWF,EAAOtB,YACtBsB,EAAOtB,WAAa,SAAUyB,GAChCpB,QAAQqB,IAAID,GACZpB,QAAQC,KAAK,sFAGflB,KAAKQ,kBAAoB,IAAIe,EAG/BU,EAAeT,UAAY,IACtBO,GAGLpC,EAAOD,QAAUuC,G,QCnCjBtC,EAAOD,QAAU,CACfyC,SATF,SAAkBI,GAChB,MAAsB,iBAARA,GASdH,WANF,SAAoBG,GAClB,MAA8B,sBAAvBC,SAASnC,KAAKkC,OCJnBE,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUjD,QAG3C,IAAIC,EAAS8C,EAAyBE,GAAY,CAGjDjD,QAAS,IAOV,OAHAkD,EAAoBD,GAAUhD,EAAQA,EAAOD,QAASgD,GAG/C/C,EAAOD,QCjBRgD,CAAoB,I,MDFvBD","file":"fufei-time-meter.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fufeiTimeMeter\"] = factory();\n\telse\n\t\troot[\"fufeiTimeMeter\"] = factory();\n})(self, function() {\nreturn ","module.exports = require('./lib/timeMeter');\r\n","//interval执行的函数\r\nfunction intervalHandler(){\r\n  if(this.status == 1){\r\n    //加上累加值\r\n    this.milliseconds += this.intervalSpace;\r\n    //执行回调函数\r\n    execCallback.call(this);\r\n  }\r\n}\r\n\r\nfunction execCallback(){\r\n  let result = {\r\n    milliseconds:this.milliseconds,\r\n    timeMeterStatus:this.status\r\n  };\r\n  this.resultInterceptor.handlers.forEach((fn) => {\r\n    if(fn != null){\r\n      result = fn(result);\r\n    }\r\n  })\r\n  this.timeUpdate(result)\r\n}\r\n\r\n//开始计时操作\r\nfunction start(){\r\n  if(this.status != 0){\r\n    console.warn(\"只有初始状态才能进行开始计时操作\");\r\n    return;\r\n  }\r\n  //设置状态\r\n  this.status = 1;\r\n  execCallback.call(this);\r\n  this.interval = setInterval(intervalHandler.bind(this),this.intervalSpace);\r\n}\r\n\r\n//暂停计时操作\r\nfunction pause(){\r\n  if(this.status != 1){\r\n    console.warn(\"只有正在计时状态才能进行暂停操作\");\r\n    return;\r\n  }\r\n  this.status = 2;\r\n  //执行回调函数\r\n  execCallback.call(this);\r\n}\r\n\r\n//继续计时操作\r\nfunction resume(){\r\n  if(this.status != 2){\r\n    console.warn(\"只有暂停计时状态才能进行继续操作\");\r\n    return;\r\n  }\r\n  this.status = 1;\r\n  execCallback.call(this);\r\n}\r\n\r\n//重置计时操作\r\nfunction reset(){\r\n  if(this.status != 2){\r\n    console.warn(\"只有暂停计时状态才能进行重置操作\");\r\n    return;\r\n  }\r\n\r\n  this.status = 0;\r\n  this.milliseconds = 0;\r\n  clearInterval(this.interval);\r\n  //执行回调函数\r\n  execCallback.call(this);\r\n}\r\n\r\nmodule.exports = {\r\n  start,\r\n  pause,\r\n  resume,\r\n  reset\r\n}\r\n","function ResultInterceptor() {\r\n  this.handlers = [];\r\n}\r\n\r\nResultInterceptor.prototype.add = function (resultFilter) {\r\n  this.handlers.push(resultFilter);\r\n  return this.handlers.length - 1;\r\n}\r\n\r\nResultInterceptor.prototype.remove = function (id) {\r\n  if(this.handlers[id]){\r\n    this.handlers[id] = null;\r\n  }\r\n}\r\n\r\nmodule.exports = ResultInterceptor;\r\n","var operations = require('./operation');\r\nvar ResultInterceptor = require('./resultInterceptor');\r\nvar utils = require('../utils');\r\n\r\nfunction createInstance(params){\r\n  //计时器有 3 种状态\r\n  //0:初始状态，未开始状态\r\n  //1:计时状态 -- 正在计时\r\n  //2:计时状态 -- 暂停计时\r\n  this.status = 0;\r\n  //计时器有 4 种操作\r\n  //(1)开始计时 (2)暂停计时 (3)继续计时 (4)重置\r\n  this.interval = null;\r\n  //计时器遍历的时间间隔(ms)\r\n  this.intervalSpace = (\r\n    params &&\r\n    params.intervalSpace &&\r\n    utils.isNumber(params.intervalSpace) &&\r\n    params.intervalSpace > 0\r\n  ) ? params.intervalSpace : 10;\r\n  this.milliseconds = (\r\n    params &&\r\n    params.milliseconds &&\r\n    utils.isNumber(params.milliseconds)\r\n  ) ? params.milliseconds : 0;\r\n  //要执行的回调函数\r\n  //params.timeUpdate\r\n  this.timeUpdate = (\r\n    params &&\r\n    params.timeUpdate &&\r\n    utils.isFunction(params.timeUpdate)\r\n  ) ? params.timeUpdate : function (e) {\r\n    console.log(e);\r\n    console.warn(\"You can customize the timeupdate callback function to get the changed time value.\");\r\n  };\r\n  //结果拦截器\r\n  this.resultInterceptor = new ResultInterceptor();\r\n}\r\n\r\ncreateInstance.prototype = {\r\n  ...operations\r\n};\r\n\r\nmodule.exports = createInstance;\r\n","function isNumber(val) {\r\n  return typeof val === 'number';\r\n}\r\n\r\nfunction isFunction(val) {\r\n  return toString.call(val) === '[object Function]';\r\n}\r\n\r\nmodule.exports = {\r\n  isNumber: isNumber,\r\n  isFunction: isFunction\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(10);\n"],"sourceRoot":""}